apply plugin: 'com.android.library'

ext {
    descText = 'TinyPinyin词典：适用于Android的中国地区名称字典。'
}

apply from: '../config/quality-java.gradle'
apply from: "$rootProject.rootDir.absolutePath/gradle/publish-android-library.gradle"

buildscript {
    repositories {
        google()
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
    }

}

javadoc {
    options.encoding = 'UTF-8'
}


def isTravis = "true".equals(System.getenv("TRAVIS"))

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode rootProject.ext.releaseVersionCode
        versionName rootProject.ext.releaseVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }

    testOptions {
        unitTests.all {
            systemProperty 'robolectric.dependency.repo.url', 'https://repo1.maven.org/maven2'
        }
    }

    if (isTravis) {
        lintOptions {
            abortOnError false
        }
    }

    sourceSets {
        String sharedTestJavaDir = 'src/sharedTest/java'

        test {
            java.srcDirs += [sharedTestJavaDir]
        }
        androidTest {
            java.srcDirs += [sharedTestJavaDir]
            resources.srcDirs += ['src/test/resources']
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api project(':tinypinyin-android-asset-lexicons')

    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'org.mockito:mockito-core:2.0.71-beta'
    testImplementation 'org.unitils:unitils-core:3.4.2'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
}


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
